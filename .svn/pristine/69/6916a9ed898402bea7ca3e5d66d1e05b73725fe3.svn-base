using Microsoft.AspNetCore.Mvc;
using ServerAPI.Authorization;
using ServerAPI.Services;
using ServerAPI.ViewModels;
using System.Threading.Tasks;

namespace ServerAPI.Controllers
{
    [Route("[controller]")]
    public class CourtCommitController : Controller
    {
        private readonly ICourtCommitService _courtCommitService;
        public CourtCommitController(ICourtCommitService courtCommitService)
        {
            _courtCommitService = courtCommitService;
        }

        [HttpGet("CourtCommitHistoryDetails")]
        public IActionResult CourtCommitHistoryDetails([FromQuery]CourtCommitHistorySearchVm searchvalue)
        {
            return Ok(_courtCommitService.CourtCommitHistoryDetails(searchvalue));
        }
      
        [HttpDelete("CourtCommitUpdateDelete")]
        public async Task<IActionResult> CourtCommitUpdateDelete(int inmatePreBookId)
        {
            return Ok(await _courtCommitService.CourtCommitUpdateDelete(inmatePreBookId));
        }

        [HttpGet("CourtCommitSentDetails")]
        public IActionResult CourtCommitSentDetails(int incarcerationId, int arrestId, int inmateId, int inmatePrebookId)
        {
            return Ok(_courtCommitService.CourtCommitSentDetails(incarcerationId, arrestId, inmateId, inmatePrebookId));
        }
   
        [HttpGet("GetIncidentWizard")]
        public IActionResult GetIncidentWizard()
        {
            return Json(_courtCommitService.GetIncidentWizard());           
        }

        [HttpPost("WizardComplete")]
        public async Task<IActionResult> WizardComplete([FromBody]CourtCommitHistoryVm courtCommitVm)
        {
            return Ok(await _courtCommitService.WizardComplete(courtCommitVm));
        }

        [FuncPermission(900, FuncPermissionType.Add)]
        [HttpPost("AddNewCommit")]
        public IActionResult AddNewCommit()
        {
            return Ok();
        }
        [FuncPermission(900, FuncPermissionType.Edit)]
        [HttpPost("EditNewCommit")]
        public IActionResult EditNewCommit()
        {
            return Ok();
        }

        [FuncPermission(900, FuncPermissionType.Delete)]
        [HttpDelete("CourtCommitDelete")]
        public IActionResult CourtCommitDelete()
        {
            return Ok();
        }
        [FuncPermission(900, FuncPermissionType.Access)]
        [HttpPut("CourtCommitAccess")]
        public IActionResult CourtCommitAccess()
        {
            return Ok();
        }

        [FuncPermission(901,FuncPermissionType.Edit)]
        [HttpGet("CourtCommitWizard")]
        public IActionResult CourtCommitWizard()
        {
            return Ok();
        }

        [FuncPermission(902, FuncPermissionType.Add)]
        [HttpGet("CourtCommitForms")]
        public IActionResult CourtCommitForms()
        {
            return Ok();
        }

        [FuncPermission(902, FuncPermissionType.Edit)]
        [HttpGet("CourtCommitFormsEdit")]
        public IActionResult CourtCommitFormsEdit()
        {
            return Ok();
        }

        [FuncPermission(902, FuncPermissionType.Delete)]
        [HttpGet("CourtCommitFormsDelete")]
        public IActionResult CourtCommitFormsDelete()
        {
            return Ok();
        }

        [FuncPermission(402, FuncPermissionType.Delete)]
        [HttpDelete("CourtCommitScheduleQueue")]
        public IActionResult CourtCommitScheduleQueue()
        {
            return Ok();
        }
        [FuncPermission(402, FuncPermissionType.Delete)]
        [HttpDelete("CourtCommitOverdueQueue")]
        public IActionResult CourtCommitOverdueQueue()
        {
            return Ok();
        }

        [FuncPermission(422, FuncPermissionType.Edit)]
        [HttpGet("CourtCommitUndoIdentity")]
        public IActionResult CourtCommitUndoIdentity()
        {
            return Ok();
        }

        [FuncPermission(903,FuncPermissionType.Add)]
        [HttpPost("AddNewAttachment")]
        public IActionResult AddNewAttachment()
        {
            return Ok();
        }

        [FuncPermission(903, FuncPermissionType.Edit)]
        [HttpPut("EditAttachment")]
        public IActionResult EditAttachment()
        {
            return Ok();
        }

        [FuncPermission(903, FuncPermissionType.Delete)]
        [HttpDelete("DeleteAttachment")]
        public IActionResult DeleteAttachment()
        {
            return Ok();
        }
    }
}