using Microsoft.AspNetCore.Mvc;
using ServerAPI.Services;
using System;
using ServerAPI.ViewModels;
using System.Collections.Generic;
using ServerAPI.Interfaces;

namespace ServerAPI.Controllers
{

    [Route("[controller]")]
    public class ClassifyAlertsController : Controller
    {
        private readonly IClassifyAlertsPrivilegeService _classifyAlertsPrivilegeService;
        private readonly IClassifyAlertsAssociationService _classifyAlertsAssociationService;
        private readonly IClassifyAlertFlagService _classifyAlertFlagService;
        private readonly IClassifyAlertsKeepsepService _classifyAlertsKeepsepService;
        public ClassifyAlertsController(IClassifyAlertsPrivilegeService classifyAlertsPrivilegeService,
        IClassifyAlertsAssociationService classifyAlertsAssociationService,
        IClassifyAlertFlagService classifyAlertFlagService, IClassifyAlertsKeepsepService classifyAlertsKeepsepService)
        {
            _classifyAlertsPrivilegeService = classifyAlertsPrivilegeService;
            _classifyAlertsAssociationService = classifyAlertsAssociationService;
            _classifyAlertFlagService = classifyAlertFlagService;
            _classifyAlertsKeepsepService = classifyAlertsKeepsepService;

        }

        #region Classify->Alerts->Privilege
        [HttpGet("GetClassifyPrivilegeDetails")]
        public IActionResult GetClassifyPrivilegeDetails(int facilityId, DateTime? fromDate, DateTime? toDate, int officerId)
        {
            return Ok(_classifyAlertsPrivilegeService.GetClassifyPrivilegeDetails(facilityId, fromDate, toDate, officerId));
        }
        #endregion

        #region Classify->Alerts->Association
        [HttpGet("GetClassifyAssociationDetails")]
        public IActionResult GetClassifyAssociationDetails([FromQuery] KeepSepSearchVm value)
        {
            return Ok(_classifyAlertsAssociationService.GetClassifyAssociationDetails(value));
        }
        #endregion

        [HttpGet("GetClassifyAlert")]
        public IActionResult GetClassifyAlert([FromQuery] KeepSepSearchVm keepSepSearch)
        {
            return Ok(_classifyAlertFlagService.GetClassifyAlert(keepSepSearch));
        }

        #region Classify->Alerts->KeepSeparate
        [HttpGet("GetAlertKeepInmateList")]
        public IActionResult GetAlertKeepInmateList(KeepSepSearchVm keepSepSearch)
        {
            return Ok(_classifyAlertsKeepsepService.GetAlertKeepInmateList(keepSepSearch));
        }
        [HttpGet("GetKeepSeparateAssocSubsetList")]
        public IActionResult GetKeepSeparateAssocSubsetList(KeepSepSearchVm keepSepSearch)
        {
            return Ok(_classifyAlertsKeepsepService.GetKeepSeparateAssocSubsetList(keepSepSearch));
        }

        #endregion





    }
}


